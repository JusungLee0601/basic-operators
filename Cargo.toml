[package]
name = "noria-clientside"
version = "0.1.0"
authors = ["JusungLee0601 <jusunglee0601@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

#[features]
#stdweb = [ "instant/stdweb" ]


[dependencies]
js-sys = "0.3.40"
petgraph = "0.5.1"
serde = "^1.0.59"
serde_derive = "^1.0.59"
serde_json = "1.0"
wasm-bindgen-test = "0.3.13"
wasm-timer = "0.2.4"
rand = "0.7.3"
log = "0.4.0"
env_logger = "0.7.1"

[dependencies.wasm-bindgen]
version = "^0.2"
features = ["serde-serialize"]

[dependencies.web-sys]
version = "0.3.22"
features = [
  "BinaryType",
  "Blob",
  "ErrorEvent",
  "FileReader",
  "MessageEvent",
  "ProgressEvent",
  "WebSocket",
  "console"
]

#[dev-dependencies]
#wasm-bindgen-test = "0.3.13"

[package.metadata.wasm-pack.profile.release]
wasm-opt = false


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
#console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
#wee_alloc = { version = "0.4.5", optional = true }

#[profile.release]
# Tell `rustc` to optimize for small code size.
#opt-level = "s"
